FROM nvcr.io/nvidia/nvhpc:25.5-devel-cuda_multi-ubuntu22.04
ENV DEBIAN_FRONTEND=noninteractive
RUN apt update && apt install -y dos2unix
RUN apt update && apt install -y libnetcdf-dev build-essential autoconf automake libtool pkg-config tzdata
# copy the compilers
RUN cd /opt/nvidia/hpc_sdk/Linux_x86_64/2025/REDIST/compilers && tar -czvhf /root/nvidia-25.5.tar.gz * && cd -
COPY . /usr/src/sfincs
WORKDIR /usr/src/sfincs

RUN find . -name \*.m4|xargs dos2unix && find . -name \*.ac|xargs dos2unix && find . -name \*.am|xargs dos2unix
RUN find . -name \*.f90|xargs dos2unix
RUN find . -name \*.F90|xargs dos2unix
RUN find . -name \*.am|xargs dos2unix
# ccall ->  Generate code for all compute capabilities supported by this platform and by the selected or default CUDA Toolkit.
RUN autoreconf -vif && FCFLAGS="-acc -Minfo=accel -fast -O3 -gpu=ccall -DSIZEOF_PTRDIFF_T=8" FC=nvfortran ./configure --disable-shared --disable-openmp  && make && make install
#RUN autoreconf -vif && FCFLAGS="-acc -Minfo=accel -fast -O3 -gpu=ccall" FC=nvfortran ./configure --disable-shared --disable-openmp  && make && make install

FROM nvidia/cuda:12.5.0-runtime-ubuntu22.04
ENV DEBIAN_FRONTEND=noninteractive
RUN apt update && apt install -y libnetcdf-dev tzdata
# copy nvidia SDK (REDIST folder contains symlinks)
COPY --from=0 /root/nvidia-25.5.tar.gz .
# copy software
COPY --from=0 /usr/local /usr/local
RUN mkdir -p /opt/nvidia/compilers
RUN tar -xzf nvidia-25.5.tar.gz -C /opt/nvidia/compilers
# add the REDIST libs to the environment
ENV LD_LIBRARY_PATH=/usr/local/nvidia/lib:/usr/local/nvidia/lib64:/opt/nvidia/compilers/lib
VOLUME /data
WORKDIR /data
CMD ["sfincs"]

